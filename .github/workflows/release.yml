name: Build and Release Binaries

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Build binaries
        run: |
          # Create bin directory
          mkdir -p bin

          # Function to build and handle errors
          build_binary() {
            local target=$1
            local output=$2
            echo "Building for $target..."
            if ! deno compile --allow-all --target "$target" --output "$output" scripts/cli.ts; then
              echo "::error::Failed to build binary for $target"
              return 1
            fi
            echo "âœ“ Successfully built $output"
          }

          # Build all targets
          build_binary "x86_64-apple-darwin" "bin/browser-manager-macos-x86_64" || exit 1
          build_binary "aarch64-apple-darwin" "bin/browser-manager-macos-arm64" || exit 1
          build_binary "x86_64-unknown-linux-gnu" "bin/browser-manager-linux-x86_64" || exit 1
          build_binary "x86_64-pc-windows-msvc" "bin/browser-manager-windows-x86_64.exe" || exit 1

      - name: Generate checksums and signature
        run: |
          cd bin
          # Generate individual checksums
          for file in browser-manager-*; do
            sha256sum "$file" > "${file}.sha256"
          done
          
          # Generate combined checksums file
          echo "# SHA-256 checksums for browser-manager ${{ steps.get_version.outputs.VERSION }}" > checksums.txt
          echo "# Generated on $(date -u)" >> checksums.txt
          echo "# To verify: sha256sum -c checksums.txt" >> checksums.txt
          echo "" >> checksums.txt
          sha256sum browser-manager-* >> checksums.txt
          
          # Sign the checksums file with GPG if a key is available
          if [[ -n "${{ secrets.GPG_PRIVATE_KEY }}" ]]; then
            echo "${{ secrets.GPG_PRIVATE_KEY }}" | gpg --import
            gpg --detach-sign --armor checksums.txt
          fi
          cd ..

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false
          files: |
            bin/browser-manager-macos-x86_64
            bin/browser-manager-macos-arm64
            bin/browser-manager-linux-x86_64
            bin/browser-manager-windows-x86_64.exe
            bin/browser-manager-macos-x86_64.sha256
            bin/browser-manager-macos-arm64.sha256
            bin/browser-manager-linux-x86_64.sha256
            bin/browser-manager-windows-x86_64.exe.sha256
            bin/checksums.txt
            bin/checksums.txt.asc
          token: ${{ secrets.GITHUB_TOKEN }}
          generate_release_notes: true
          body: |
            ## Browser Manager ${{ steps.get_version.outputs.VERSION }}

            ### Installation
            ```bash
            # Using curl
            curl -fsSL https://raw.githubusercontent.com/zackiles/browser-manager/main/install.sh | bash

            # Or using wget
            wget -qO- https://raw.githubusercontent.com/zackiles/browser-manager/main/install.sh | bash
            ```

            ### Verifying Checksums
            Each binary comes with its own `.sha256` checksum file. You can verify the integrity of your download using:
            ```bash
            # Download the binary and its checksum
            curl -LO https://github.com/zackiles/browser-manager/releases/latest/download/browser-manager-[YOUR-PLATFORM]
            curl -LO https://github.com/zackiles/browser-manager/releases/latest/download/browser-manager-[YOUR-PLATFORM].sha256

            # Verify the checksum
            sha256sum -c browser-manager-[YOUR-PLATFORM].sha256
            ```

            Alternatively, download `checksums.txt` to verify all binaries at once:
            ```bash
            sha256sum -c checksums.txt
            ```

            ### GPG Verification
            The `checksums.txt` file is signed with our release GPG key. To verify the signature:
            ```bash
            # Download the signature
            curl -LO https://github.com/zackiles/browser-manager/releases/latest/download/checksums.txt.asc

            # Verify the signature
            gpg --verify checksums.txt.asc checksums.txt
            ``` 